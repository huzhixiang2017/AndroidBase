apply plugin: 'com.android.application'


// 原写法：compileSdkVersion rootProject.ext.android.compileSdkVersion
def ext = rootProject.ext
def config = rootProject.ext.android  //默认配置信息
def support = rootProject.ext.support //第三方依赖库



android {
    compileSdkVersion config.compileSdkVersion


    /**  使用JDK 1.8  */ //解决：Error: Invoke-customs are only supported starting with Android O (--min-api 26)
    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }


    /**  国际化或打包报错  */
    // - is not translated和is translated here but not found in default locale  https://blog.csdn.net/QQ55214/article/details/72315662
    lintOptions {
        disable 'MissingTranslation'
        disable 'ExtraTranslation'
        disable 'MissingDefaultResource'
    }


    /**  默认配置信息 */
    defaultConfig {
        applicationId config.applicationId
        minSdkVersion config.minSdkVersion
        targetSdkVersion config.targetSdkVersion
        versionCode config.versionCode
        versionName config.versionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        //resConfig 'zh'      // 仅保留中文语种的资源
        //resConfig 'xxhdpi'  // 仅保留 xxhdpi 图片资源（目前主流分辨率 1920 * 1080）
        // proguard-rules.pro 中进行判断哪些类不用混淆
        proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

        // 选择要添加的cpu类型的.so库
        ndk {
            // armeabi：已经淘汰（0%），armeabi-v7a：曾经主流的架构平台（20%），arm64-v8a：目前主流架构平台（80%）
            abiFilters "armeabi-v7a", "arm64-v8a"
        }
    }


    /**  DEX选项配置  */
    dexOptions{
        javaMaxHeapSize"6g"  //配置执行dx命令时为其分配的最大堆内存(根据电脑配置，越大越好)
        maxProcessCount 8    //可以并行启动的 DEX 进程的最大数量
        preDexLibraries true //配置是否预dex Libraries库工程，默认值为true，开启后会提高增量构建的速度
        //Warning:The `android.dexOptions.incremental` property is deprecated and it has no effect on the build process.
        dexInProcess = true  //加快编译速度
    }

    /**  MVVM模式数据绑定框架 */  //https://www.jianshu.com/p/bd9016418af2
    dataBinding {
        enabled true
    }


    /**  默认配置信息 */
    //指定哪些源文件被编译，哪些源文件被排除 https://blog.csdn.net/lbcab/article/details/72771729
    sourceSets {
        main { // srcDir指定，exclude 排除
            //jniLibs.srcDirs = ['libs']
        }
    }


    /**  APK签名 https://www.jianshu.com/p/a1f8e5896aa2  */
    signingConfigs {
        // 路劲/app/gradle.properties 文件内配置秘钥信息
        release { //正式环境
            storeFile file(StoreFile)
            storePassword StorePassword
            keyAlias KeyAlias
            keyPassword KeyPassword
        }
        debug {   //测试环境
            storeFile file(StoreFile)
            storePassword StorePassword
            keyAlias KeyAlias
            keyPassword KeyPassword
        }
    }


    /**  代码混淆 + 打包配置  */
    buildTypes {

        release { //正式环境
            shrinkResources true // 移除无用的资源文件
            zipAlignEnabled true // ZipAlign优化 https://blog.csdn.net/hello_1995/article/details/52870573
            minifyEnabled true   // 代码混淆  https://blog.csdn.net/youyu_torch/article/details/78775100
            signingConfig signingConfigs.release  // 正式环境签名
            buildConfigField "String", "BUGLY_ID", "\"请自行替换 Bugly 上面的 AppID\""  // Bug管理工具之Bugly的使用 服务端替换BuglyId
        }
        debug {  //测试环境
            shrinkResources false
            zipAlignEnabled false
            minifyEnabled false
            signingConfig signingConfigs.debug
            buildConfigField "String", "BUGLY_ID", "\"请自行替换 Bugly 上面的 AppID\""
        }
    }


    /**  生成APK，执行配置,在Build Variants视窗内切换渠道 */
    //实现友盟多渠道打包 https://www.jb51.net/article/140427.htm
    flavorDimensions "default"  // 设置默认渠道名，同时可以切换成下面的渠道，生成的APK路径：/build/outputs/apk/..
    productFlavors {            // 友盟多渠道打包
        tencent {}  // 应用宝
        baidu {}    // 百度
        xiaomi {}   // 小米
        huawei {}   // 华为
        oppo {}
        vivo {}
        _360 {}

        Beta {}     //测试版
        Alpha {}    //首发（第一版）
        Develop {}  //开发版
        Demo {}     //演示版 __ 括号内提取 manifestPlaceholders = [UMENG_CHANNEL_VALUE: "Develop"]

        productFlavors.all { flavor ->
            flavor.manifestPlaceholders = [UMENG_CHANNEL_VALUE: name]
        }

        // apk名配置
        applicationVariants.all { variant ->
            variant.outputs.all { output ->
                def appName = "AndroidBase"
                if (variant.buildType.name == 'debug') {
                    outputFileName = appName + '_v' + versionName + '_' + variant.buildType.name + '.apk'
                } else {
                    outputFileName  = appName + '_v' + versionName + '_' + new Date().format("yyyyMMdd") + '_' + variant.productFlavors[0].name + '_' + variant.buildType.name + '.apk'
                }
            }

            /**  这个没搞明白改天再研究，先搞简单的 */
            // AndroidManifest 输出配置
//            variant.outputs[0].processManifest.doLast {
//                def manifestFile = "${manifestOutputDirectory}/AndroidManifest.xml"
//                def updatedContent = new File(manifestFile).getText('UTF-8')
//                        .replaceAll("UMENG_APPKEY_VALUE", "5cb16d93570df399fd0014e2") // 友盟 AppKey
//                        .replaceAll("QQ_APPID_VALUE", "100424468") // QQ AppId
//                        .replaceAll("QQ_APPKEY_VALUE", "c7394704798a158208a74ab60104f0ba") // QQ Key
//                        .replaceAll("WX_APPID_VALUE", "wxdc1e388c3822c80b") // 微信 AppId
//                        .replaceAll("WX_APPKEY_VALUE", "3baf1193c85774b3fd9d18447d76cab0") // 微信 Key
//                new File(manifestFile).write(updatedContent, 'UTF-8')
//            }

        }
    }
}


dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'

    /** Androidx 和 Android support 共存问题 */
    //注释掉gralde.properties文件内 android.enableJetifier=true 和 android.useAndroidX=true， https://www.jianshu.com/p/f7a7a8765294
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    implementation support.appcompatV7
    implementation support.appcompatV4

    // ButterKnife 注解库 https://www.cnblogs.com/SongYongQian/p/7967202.html
    implementation support.butterknife
    annotationProcessor support.butterknifeCompiler
    //implementation support.toast  // 参考 吐司工具类：https://github.com/getActivity/ToastUtils

}
